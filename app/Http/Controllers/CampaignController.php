<?php

namespace App\Http\Controllers;

use App\Models\Campaign;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Auth;

class CampaignController extends Controller
{
    public function index()
    {
        $categories = DB::table('categories')->get();
        $campaigns = DB::table('campaigns')
            ->join('categories', 'campaigns.categoriesID', '=', 'categories.id')
            ->select('campaigns.*', 'categories.name as category_name')
            ->get();

        if (Auth::user()->role == 1) {
            return view('super-admin.campaigns', compact('categories', 'campaigns'));
        } elseif (Auth::user()->role == 2) {
            return view('admin.campaigns', compact('categories', 'campaigns'));
        }
    }

    public function store(Request $request)
    {
        $request->validate([
            'categoriesID' => 'required|integer',
            'name' => 'required',
            'description' => 'required',
            'price' => 'required|numeric',
            'stock' => 'required|integer',
            'details' => 'required',
            'status' => 'required',
            'campaign_img' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:7048',
        ]);

        $data = $request->all();

        // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        if ($request->hasFile('campaign_img')) {
            $fileName = time() . '.' . $request->campaign_img->extension();
            $request->campaign_img->move(public_path('img/campaign/'), $fileName);
            $data['campaign_img'] = $fileName;
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        $campaign = Campaign::create($data);
        
        if ($campaign->status == "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç"){
        // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Broadcast
        $lineToken = env('LINE_CHANNEL_ACCESS_TOKEN');
        $linkapp = env('APP_URL');
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á
        $message = "üéâ ‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç üéâ\n" .
            "‚ú® {$campaign->name}\n" .
            "üí∞ ‡∏£‡πà‡∏ß‡∏°‡∏ö‡∏∏‡∏ç: {$campaign->price} ‡∏ö‡∏≤‡∏ó\n" .
            "üìã " . str_replace("/n", "\n", $campaign->description);

        $message2 = "‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏ö‡∏∏‡∏ç\n" .
            "üí∞ ‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏ò‡∏¥‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏±‡∏®‡∏°‡∏µ\n" .
            "‡∏ò.‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ 171-1-75423-3\n" .
            "‡∏ò.‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ 649-242269-4\n\n" .
            "üìå ‡∏£‡πà‡∏ß‡∏°‡∏ö‡∏∏‡∏ç‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: $linkapp";

        $imageUrl = asset('img/campaign/' . $campaign->campaign_img); 
        // $imageUrl = "https://images.unsplash.com/photo-1720048169707-a32d6dfca0b3?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxmZWF0dXJlZC1waG90b3MtZmVlZHwxfHx8ZW58MHx8fHx8"; 

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE OA
        $response = Http::withHeaders([
            'Content-Type' => 'application/json',
            'Authorization' => "Bearer $lineToken",
        ])->post('https://api.line.me/v2/bot/message/broadcast', [
            'messages' => [
                [
                    'type' => 'image',
                    'originalContentUrl' => $imageUrl, // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                    'previewImageUrl' => $imageUrl, // ‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                ],
                [
                    'type' => 'text',
                    'text' => $message, // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                ],
                [
                    'type' => 'text',
                    'text' => $message2, // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                ],
            ],
        ]);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Broadcast
        if ($response->successful()) {
            return redirect()->back()->with('success', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Broadcast ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß.');
        } else {
            return redirect()->back()->with('success', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Broadcast ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à.');
        }
    } else {return redirect()->back()->with('success', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');}
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            'name' => 'required',
            'description' => 'required',
            'price' => 'required|numeric',
            'stock' => 'required|integer',
            'status' => 'required',
        ]);

        $campaign = Campaign::findOrFail($id);
        $campaign->update($request->all());
        return redirect()->back()->with('success', '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß.');
    }

    public function destroy($id)
    {
        $campaign = Campaign::findOrFail($id);

        // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        if ($campaign->campaign_img && file_exists(public_path('img/campaign/' . $campaign->campaign_img))) {
            unlink(public_path('img/campaign/' . $campaign->campaign_img));
        }

        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        $campaign->delete();

        return redirect()->back()->with('success', '‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß.');
    }
}
